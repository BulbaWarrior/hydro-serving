name: Local release
on:
  workflow_dispatch:
    inputs:
      service_image_name:
        description: the service image to be updated
        required: true
        
      registry_url:
        description: the name of registry server
        required: true
        
      tag:
        description: version tag of the image
        required: true

jobs:

  Update:
    runs-on: ubuntu-latest
    continue-on-error: true

    name: Bump image tag
    env:
      IMAGE_NAME: ${{ github.event.inputs.service_image_name }}
      REGISTRY_URL: ${{ github.event.inputs.registry_url }}
      TAG: ${{ github.event.inputs.tag }}
      
    steps:
      - name: Set dynamic environment variables
        run: |
          case $IMAGE_NAME in
          
            serving-gateway)
              HELM_CHART_NAME=gateway
              SERVICE_NAME=hydro-serving-gateway
              ;;
              
            serving-manager)
              HELM_CHART_NAME=manager
              SERVICE_NAME=hydro-serving-manager
              ;;
              
            hydro-root-cause)
              HELM_CHART_NAME=rootcause
              SERVICE_NAME=hydro-root-cause
              ;;
              
            sonar)
              HELM_CHART_NAME=sonar
              SERVICE_NAME=sonar
              ;;
              
            stat)
              HELM_CHART_NAME=stat
              SERVICE_NAME=hydro-stat
              ;;
              
            hydro-serving-ui)
              HELM_CHART_NAME=ui
              SERVICE_NAME=hydro-serving-ui
              ;;  
            
            hydro-visualization)
              HELM_CHART_NAME=visualization
              SERVICE_NAME=hydro-visualization
              ;;
            
            *)
              echo "unknown IMAGE_NAME"
              exit 1
              ;;
          esac
          
          echo HELM_CHART_NAME=$HELM_CHART_NAME >> $GITHUB_ENV
          echo SERVICE_NAME=$SERVICE_NAME >> $GITHUB_ENV
          
          
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master
        
      - name: Update ${{env.HELM_CHART_NAME}}/values.yaml
        run: "cd helm && sed -i \"s/.*full:.*/  full: $REGISTRY_URL\\/$IMAGE_NAME:$TAG/g\" $HELM_CHART_NAME/values.yaml"
      
      - name: Update dev.yaml
        run: "cd helm && sed -i \"s/.*$IMAGE_NAME.*/    full: $REGISTRY_URL\\/$IMAGE_NAME:$TAG/g\" dev.yaml"
        
        # TODO: linting and stuff
        
      - name: Update docker-compose service image
        run: "cd docker-compose && sed -i \"s/.*image:.*/    image: $REGISTRY_URL\\/$IMAGE_NAME:$TAG/g\" $SERVICE_NAME.service.template"
        
      - name: Merge compose file
        run: |
          cd docker-compose
          command="docker-compose"
          for template in $(ls *.template)
          do
            command="$command -f $template"
          done

          command="$command config"
          $command > ../docker-compose.yaml
            
        
        
      - name: Push to repo
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -m "Releasing $IMAGE_NAME:$TAG" -a
          git push

  slackNotification:
    name: Slack Notification
    needs: Update
    runs-on: ubuntu-latest
    steps:
    - name: Slack Notification success
      if: ${{ success() }}
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_CHANNEL: hydrosphere
        SLACK_USERNAME: HydroRobot
        SLACK_ICON: https://avatars.githubusercontent.com/u/17550625?s=200&v=4
        SLACK_COLOR: ${{ job.status }}
        SLACK_TITLE: Build status - success
        SLACK_MESSAGE: "Releasing ${{ github.event.inputs.service_image_name }}:${{ github.event.inputs.tag }} :rocket:"
        MSG_MINIMAL: true

    - name: Slack Notification failure
      if: ${{ failure() }}
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_CHANNEL: hydrosphere
        SLACK_USERNAME: HydroRobot
        SLACK_ICON: https://avatars.githubusercontent.com/u/17550625?s=200&v=4
        SLACK_COLOR: ${{ job.status }}
        SLACK_TITLE: Build status - failure
        SLACK_MESSAGE: "Check build ${{ github.event.inputs.service_image_name }} status"
        MSG_MINIMAL: true
