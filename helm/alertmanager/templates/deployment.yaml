{{- if eq .Values.global.alertmanager.url ""}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "alertmanager.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ include "alertmanager.name" . }}
    chart: {{ include "alertmanager.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "alertmanager.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "alertmanager.name" . }}
        release: {{ .Release.Name }}
        logging: "true"
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: alertmanager-config
              mountPath: /etc/alertmanager 
          ports:
            - name: http
              containerPort: 9093
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
{{- if .Values.global.tolerations }}  
      tolerations:
{{ toYaml .Values.global.tolerations | indent 8 }}
{{- end }}
      volumes:
        - name: alertmanager-config
          configMap:
            name: alertmanager-configmap-{{ .Release.Name}}
            items:
              - key: 'alertmanager.yml'
                path: 'alertmanager.yml'
{{- end }}