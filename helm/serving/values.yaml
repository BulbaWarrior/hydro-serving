global:
  ingress:
    enabled: false
    frontendUrl: ui.example.io # Domain name for the frontend ingress.
    path: "/"
    issuer: letsencrypt-prod # A name of the cert-manager issuer name, configured within the 
                             # cluster.

  registry:
    internal: true # Internal/external mode for the registry. In case of internal registry 
                    # mode, a new registry instance will be deployed within the cluster.
    insecure: true #Use insecure docker registry
    url: "index.docker.io/username" # Domain name for internal\external registry. In case 
                                    # of internal registry, a new ingress resource will be 
                                    # created.
    username: "example" # Internal\external registry username
    password: "example" # Internal\external registry password
        
  persistence:
    mode: local # Persistence mode for services (one of s3, minio)
    accessKey: ACCESSKEYEXAMPLE # accesskeyid for s3 or minio
    secretKey: SECRETKEYEXAMPLE # secretkeyid for s3 or minio
    region: eu-central-1 # Region of the bucket in case of S3 persistence mode.  
    bucket: example # S3 bucket name in case of S3 persistence mode.

  postgresql:
    url: "" # Postgresql host in case of using external postgresql instance. If not specified, 
            # a new instance will be deployed within the cluster.
    username: postgres # Postgresql username
    password: hydr0s3rving # Postgresql password
    database: hydro-serving # Postgresql database name 
  
ui:
  public: true