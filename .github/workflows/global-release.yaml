name: Global Release

on:
  workflow_dispatch:
    inputs:
      bump:
        description: bump rule (major|feature|bug|rc)
        default: bug
        required: false
        
      version:
        description: release version, ommit to bump
        required: false
        
      skip_grpc:
        description: skip grpc? (yes|no)
        default: 'no'
        required: false
        
      skip_sdk: 
        description: skip sdk? (yes|no)
        default: 'no'
        required: false
        
      skip_services:
        description: skip services? (yes|no)
        default: 'no'
        required: false
env:
  DOCKER_REGISTRY_URL: bulbawarrior
  
# Secrets:
#   HYDRO_SERVING_TOKEN - github token with write access to all hydrosphere repos
  
jobs:
  version:
    name: Determine release version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Get latest tag
        id: get-latest-tag
        uses: actions-ecosystem/action-get-latest-tag@v1
        
      - name: Bump release version
        id: bump_version
        uses: christian-draeger/increment-semantic-version@1.0.2
        with:
          current-version: ${{ steps.get-latest-tag.outputs.tag }}
          version-fragment: ${{ github.event.inputs.bump }}
          
      - name: Set VERSION variable
        if: github.event.inputs.version == ''
        run: echo VERSION=${{ steps.bump_version.outputs.next-version }} >> $GITHUB_ENV
        
      - name: Force set VERSION variable
        if: github.event.inputs.version != ''
        run: echo VERSION=${{ github.event.inputs.version }}
        
  deps:
    needs: [version]
    runs-on: ubuntu-latest
    steps:
      - name: Debug
        run: echo ${{ env.VERSION }}
        
      - name: Release hydro-serving-protos
        if: github.event.inputs.skip_grpc != 'yes'
        uses: aurelien-baudet/workflow-dispatch@v2.1.1
        with:
          workflow: cd
          token: ${{ secrets.HYDRO_SERVING_TOKEN }}
          repo: ${{ github.repository_owner }}/hydro-serving-protos
          inputs: '{"version":"${{ github.event.inputs.version }}", "release":"global"}'
          
      - name: Release hydro-serving-sdk
        if: github.event.inputs.skip_sdk != 'yes'
        uses: aurelien-baudet/workflow-dispatch@v2.1.1
        with:
          workflow: cd
          token: ${{ secrets.HYDRO_SERVING_TOKEN }}
          repo: ${{ github.repository_owner }}/hydro-serving-sdk
          inputs: '{"version":"${{ github.event.inputs.version }}", "release":"global"}' # "grpc_version":"${{ github.event.inputs.version }}"

  Release_services:
    # template to release the rest of the repos
    if: github.event.inputs.skip_services != 'yes'
    runs-on: ubuntu-latest
    needs: [deps]
    strategy:
      matrix:
        service_repo_name: [hydro-serving-gateway] # names of repositories to release
    steps:
      - name: Release latest version of ${{ matrix.service_repo_name }}
        uses: aurelien-baudet/workflow-dispatch@v2.1.1
        with:
          workflow: cd
          token: ${{ secrets.HYDRO_SERVING_TOKEN }}
          repo: ${{ github.repository_owner }}/${{ matrix.service_repo_name }}
          inputs: '{"version":"${{ github.event.inputs.version }}"}'
       
  Release_serving:
    needs: [Release_services]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - env:
          IMAGE: serving-gateway
        name: Bump ${{ env.IMAGE }} version in chart
        uses: ./.github/actions/release-action
        with:
          release: global
          registry_url: ${{ env.DOCKER_REGISTRY_URL }}
          service_image_name: ${{ env.IMAGE }}
          tag: ${{ github.event.inputs.version }}
          
      - env:
          IMAGE: serving-manager
        name: Bump ${{ env.IMAGE }} version in chart
        uses: ./.github/actions/release-action
        with:
          release: global
          registry_url: ${{ env.DOCKER_REGISTRY_URL }}
          service_image_name: ${{ env.IMAGE }}
          tag: ${{ github.event.inputs.version }}
          
      - env:
          IMAGE: hydro-root-cause
        name: Bump ${{ env.IMAGE }} version in chart
        uses: ./.github/actions/release-action
        with:
          release: global
          registry_url: ${{ env.DOCKER_REGISTRY_URL }}
          service_image_name: ${{ env.IMAGE }}
          tag: ${{ github.event.inputs.version }}
      
      - env:
          IMAGE: sonar
        name: Bump ${{ env.IMAGE }} version in chart
        uses: ./.github/actions/release-action
        with:
          release: global
          registry_url: ${{ env.DOCKER_REGISTRY_URL }}
          service_image_name: ${{ env.IMAGE }}
          tag: ${{ github.event.inputs.version }}
        
      - env:
          IMAGE: stat
        name: Bump ${{ env.IMAGE }} version in chart
        uses: ./.github/actions/release-action
        with:
          release: global
          registry_url: ${{ env.DOCKER_REGISTRY_URL }}
          service_image_name: ${{ env.IMAGE }}
          tag: ${{ github.event.inputs.version }}
      
      - env:
          IMAGE: hydro-serving-ui
        name: Bump ${{ env.IMAGE }} version in chart
        uses: ./.github/actions/release-action
        with:
          release: global
          registry_url: ${{ env.DOCKER_REGISTRY_URL }}
          service_image_name: ${{ env.IMAGE }}
          tag: ${{ github.event.inputs.version }}
          
      - env:
          IMAGE: hydro-visualization
        name: Bump ${{ env.IMAGE }} version in chart
        uses: ./.github/actions/release-action
        with:
          release: global
          registry_url: ${{ env.DOCKER_REGISTRY_URL }}
          service_image_name: ${{ env.IMAGE }}
          tag: ${{ github.event.inputs.version }}
          
      - name: Setup helm
        run: |
          curl -LO https://git.io/get_helm.sh
          chmod 700 get_helm.sh
          ./get_helm.sh
      
      - name: Create helm release
        run: |
          cd helm
          helm init --client-only --stable-repo-url https://charts.helm.sh/stable
          helm package --dependency-update --version ${{ github.event.inputs.version }} serving
          
      - name: Calculate release sha
        id: sha
        run: |
          cd helm
          SHA=$(shasum -a 256 -b ./serving-${{ github.event.inputs.version }}.tgz | awk '{ print $1 }')
          echo ::set-output name=sha::$SHA
          
      - name: Update README.md
        run: |
          sed -i -E "s/export HYDROSPHERE_RELEASE=.*/export HYDROSPHERE_RELEASE=${{ github.event.inputs.version }}/g" README.md
      
      - name: Update helm/README.md
        env:
          sedCommand: 's/[0-9]+\.[0-9]+\.[0-9]+\/serving-[0-9]+\.[0-9]+\.[0-9]+\.tgz/${{ github.event.inputs.version }}\/serving-${{ github.event.inputs.version }}.tgz/g'
        run: |
          echo $sedCommand
          cd helm
          sed -i 'README.md' -E -e $sedCommand README.md
          
      - name: Add release metadata to helm/index.yaml
        run: |
          cd helm
          ./add_version.sh ${{ github.event.inputs.version }} ${{ steps.sha.outputs.sha }}
          
      - name: Push changes
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -m "Releasing global version ${{ github.event.inputs.version }}" -a
          git push
          
      - name: Create github release
        uses: meeDamian/github-release@2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.event.inputs.version }}
          gzip: false
          files: helm/serving-${{ github.event.inputs.version }}.tgz
